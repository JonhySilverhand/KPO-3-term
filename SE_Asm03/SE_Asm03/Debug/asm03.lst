Microsoft (R) Macro Assembler Version 14.29.30140.0	    10/03/22 17:03:54
asm03.asm						     Page 1 - 1


				.586P
				.model flat, stdcall
				includelib kernel32.lib

				ExitProcess PROTO : DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.STACK 4096

 00000000			.CONST

 00000000			.DATA
 00000000 10 20 30 40		myBytes		BYTE	10h, 20h, 30h, 40h
 00000004 008A 003B 0044	myWords		WORD	8Ah, 3Bh, 44h, 5Fh, 99h
	   005F 0099
 0000000E 00000001		myDoubles	DWORD	1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 00000026 0000000E R		myPointer	DWORD	myDoubles

 0000002A 01 03 03 04 05	myArray		BYTE	1, 3, 3, 4, 5, 6, 7
	   06 07

 00000031 D1 EC E8 F0 ED	STR1		DB		"Смирнов В.Ю, 2 курс, 6 группа", 0
	   EE E2 20 C2 2E
	   DE 2C 20 32 20
	   EA F3 F0 F1 2C
	   20 36 20 E3 F0
	   F3 EF EF E0 00
 0000004F CD F3 EB E5 E2	STR2		DB		"Нулевой элемент присутствует в массиве", 0
	   EE E9 20 FD EB
	   E5 EC E5 ED F2
	   20 EF F0 E8 F1
	   F3 F2 F1 F2 E2
	   F3 E5 F2 20 E2
	   20 EC E0 F1 F1
	   E8 E2 E5 00
 00000076 CD F3 EB E5 E2	STR3		DB		"Нулевой элемент отсутствует в массиве", 0
	   EE E9 20 FD EB
	   E5 EC E5 ED F2
	   20 EE F2 F1 F3
	   F2 F1 F2 E2 F3
	   E5 F2 20 E2 20
	   EC E0 F1 F1 E8
	   E2 E5 00

 00000000			.CODE

 00000000			main PROC
 00000000			START:
 00000000  BE 00000000			mov ESI, 0
 00000005  8B 86 00000012 R		mov EAX, myDoubles[ESI + 4]
 0000000B  8B 96 0000000E R		mov EDX, [myDoubles + ESI]

 00000011  BE 0000002A R		mov ESI, OFFSET myArray
 00000016  B8 00000000			mov EAX, 0
 0000001B  02 06			add AL, [ESI]
 0000001D  B9 00000006			mov ECX, 6

 00000022				c1:													; c1 is loop for sum of elements array
 00000022  83 C6 01					add ESI, 1
 00000025  02 06					add AL, [ESI]
 00000027  E2 F9					loop c1
					;---------------------------------------
 00000029  B0 00			mov AL, 0
 0000002B  BB 00000001			mov EBX, 1
 00000030  B9 00000007			mov ECX, LENGTHOF myArray

 00000035				c2:
 00000035  80 B8 0000002A R				cmp [myArray + EAX], 0
	   00
 0000003C  74 02					je ct
 0000003E  75 1A					jne cf

 00000040				ct:
 00000040  BB 00000000					mov EBX, 0
							INVOKE MessageBoxA, 0, OFFSET STR2, OFFSET STR1, 1
 00000058  EB 05					jmp ENDC

 0000005A				cf:
 0000005A  83 C0 01					add EAX, 1
 0000005D  E2 D6					loop c2


 0000005F				ENDC:
 0000005F  83 FB 01					cmp EBX, 1
 00000062  74 02					je cout2
 00000064  75 13					jne EXIT

 00000066				cout2:
							INVOKE MessageBoxA, 0, OFFSET STR3, OFFSET STR1, 1
						
 00000079				EXIT:
					
 00000079  6A 00		push 0
 0000007B  E8 00000000 E	call ExitProcess

 00000080			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.29.30140.0	    10/03/22 17:03:54
asm03.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000009C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000080 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000080 Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  c1 . . . . . . . . . . . . . .	L Near	 00000022 _TEXT	
  c2 . . . . . . . . . . . . . .	L Near	 00000035 _TEXT	
  ct . . . . . . . . . . . . . .	L Near	 00000040 _TEXT	
  cf . . . . . . . . . . . . . .	L Near	 0000005A _TEXT	
  ENDC . . . . . . . . . . . . .	L Near	 0000005F _TEXT	
  cout2  . . . . . . . . . . . .	L Near	 00000066 _TEXT	
  EXIT . . . . . . . . . . . . .	L Near	 00000079 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
STR1 . . . . . . . . . . . . . .	Byte	 00000031 _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 0000004F _DATA	
STR3 . . . . . . . . . . . . . .	Byte	 00000076 _DATA	
myArray  . . . . . . . . . . . .	Byte	 0000002A _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000026 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	

	   0 Warnings
	   0 Errors
